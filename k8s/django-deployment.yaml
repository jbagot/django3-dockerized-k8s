apiVersion: v1
kind: Service
metadata:
  labels:
    app: django
  name: django
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    app: django
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: django
  name: django
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
      - image: pentux/pygrn_k8s_workshop:latest
        name: django
        args:
        - /start
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: postgres-envs
        - name: DJANGO_ADMIN_URL
          valueFrom:
            configMapKeyRef:
              key: DJANGO_ADMIN_URL
              name: django-envs
        - name: DJANGO_DEBUG
          valueFrom:
            configMapKeyRef:
              key: DJANGO_DEBUG
              name: django-envs
        - name: DJANGO_SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: DJANGO_SECRET_KEY
              name: django-envs
        - name: DJANGO_SETTINGS_MODULE
          valueFrom:
            configMapKeyRef:
              key: DJANGO_SETTINGS_MODULE
              name: django-envs
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: postgres-envs
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_HOST
              name: postgres-envs
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: postgres-envs
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PORT
              name: postgres-envs
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: postgres-envs
        - name: WEB_CONCURRENCY
          valueFrom:
            configMapKeyRef:
              key: WEB_CONCURRENCY
              name: django-envs
        resources: {}
        volumeMounts:
        - mountPath: /code/static
          name: static-volume
      restartPolicy: Always
      volumes:
      - name: static-volume
        persistentVolumeClaim:
          claimName: static-volume
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: static-volume
  name: static-volume
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
